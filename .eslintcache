[{"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\index.tsx":"1","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\App.tsx":"2","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Navbar\\index.tsx":"3","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Dashboard\\index.tsx":"4","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\index.tsx":"5","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopThreeProducts\\index.tsx":"6","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopSuppliers\\index.tsx":"7","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\IncomingDeliveries\\index.tsx":"8","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\constants\\index.ts":"9","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartContainer\\index.tsx":"10","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Filter\\index.tsx":"11","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartInfo\\index.tsx":"12","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\BarChart.tsx":"13","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\Context\\index.tsx":"14","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\PieChart.tsx":"15","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\LineChart.tsx":"16"},{"size":251,"mtime":1611330004678,"results":"17","hashOfConfig":"18"},{"size":284,"mtime":1611326961478,"results":"19","hashOfConfig":"18"},{"size":209,"mtime":1611050080250,"results":"20","hashOfConfig":"18"},{"size":1553,"mtime":1611357973266,"results":"21","hashOfConfig":"18"},{"size":5838,"mtime":1611420119637,"results":"22","hashOfConfig":"18"},{"size":2994,"mtime":1611348860003,"results":"23","hashOfConfig":"18"},{"size":3467,"mtime":1611359786346,"results":"24","hashOfConfig":"18"},{"size":4118,"mtime":1611427715734,"results":"25","hashOfConfig":"18"},{"size":1585,"mtime":1611327560378,"results":"26","hashOfConfig":"18"},{"size":279,"mtime":1611326961479,"results":"27","hashOfConfig":"18"},{"size":877,"mtime":1611414158467,"results":"28","hashOfConfig":"18"},{"size":497,"mtime":1611326961480,"results":"29","hashOfConfig":"18"},{"size":2095,"mtime":1611390391734,"results":"30","hashOfConfig":"18"},{"size":1936,"mtime":1611406213684,"results":"31","hashOfConfig":"18"},{"size":3127,"mtime":1611389224642,"results":"32","hashOfConfig":"18"},{"size":2445,"mtime":1611424845568,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11xx81g",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\index.tsx",[],["70","71"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\App.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Navbar\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Dashboard\\index.tsx",["72"],"import React, { useContext, useState } from 'react';\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport IncomingDeliveries from '../IncomingDeliveries';\r\nimport TopSuppliers from '../TopSuppliers';\r\nimport TopThreeProducts from '../TopThreeProducts';\r\nimport TotalOrderVolumen from '../TotalOrderVolumen';\r\nimport './Dashboard.scss';\r\nimport { LAYOUT, BREAKPOINTS, COLUMNS } from '../../constants';\r\nimport { Context } from '../../Context';\r\n\r\n\r\n// Handles the responsive nature of the grid\r\nconst MyResponsiveGrid = WidthProvider(Responsive);\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n    const { orders } = useContext(Context);\r\n\r\n    return (\r\n        <MyResponsiveGrid\r\n            breakpoints={BREAKPOINTS}\r\n            cols={COLUMNS}\r\n            autoSize={true}\r\n            rowHeight={450}\r\n            margin={[20, 20]}\r\n            containerPadding={[30, 30]}\r\n            useCSSTransforms={true}\r\n            preventCollision={true}\r\n            layouts={LAYOUT}\r\n        >\r\n            <div key=\"TotalOrderVolumen\" >\r\n                <TotalOrderVolumen orders={orders} />\r\n            </div>\r\n\r\n            <div key=\"TopThreeProducts\" >\r\n                <TopThreeProducts orders={orders} />\r\n            </div>\r\n\r\n            <div key=\"TopSuppliers\" >\r\n                <TopSuppliers orders={orders} />\r\n            </div>\r\n\r\n            <div key=\"IncomingDeliveries\" >\r\n                <IncomingDeliveries orders={orders} />\r\n            </div>\r\n\r\n\r\n        </MyResponsiveGrid >\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\index.tsx",["73","74","75"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopThreeProducts\\index.tsx",["76","77"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport ChartContainer from '../ChartContainer';\r\nimport ChartInfo from '../ChartInfo'\r\nimport { Order, DashboardProps, ProductData } from '../../types/index'\r\nimport Filter from '../Filter';\r\nimport styles from './TopThreeProducts.module.scss';\r\nimport BarChart from '../Charts/BarChart';\r\nimport { Context } from '../../Context';\r\n\r\nconst TopThreeProducts: React.FC<DashboardProps> = ({ orders }) => {\r\n\r\n    const { getUniqueValues } = useContext(Context);\r\n\r\n    const [chartData, setChartData] = useState<ProductData[]>([])\r\n    const [filter, setFilter] = useState<string>(\"Currency\");\r\n\r\n    useEffect(() => {\r\n        const products = getProductData();\r\n        const topThree = getTopThreeProducts(products)\r\n        setChartData(topThree)\r\n    }, [filter])\r\n\r\n    const getTopThreeProducts = (products: ProductData[]) => {\r\n        if (filter === \"Currency\") {\r\n            const topThree = products.sort((a, b) => (b.currency - a.currency)).slice(0, 3);\r\n\r\n            return topThree\r\n        } else {\r\n            const topThree = products.sort((a, b) => (b.quantity - a.quantity)).slice(0, 3);\r\n\r\n            return topThree\r\n        }\r\n    }\r\n\r\n    const getProductData = () => {\r\n\r\n        const productNames = orders.map(order => order.productName);\r\n        const uniqueNames = getUniqueValues(productNames);\r\n\r\n        const productData: ProductData[] = uniqueNames.map(name => {\r\n\r\n            //Get orders of the same products\r\n            const sameProduct = orders.filter(order => order.productName === name);\r\n\r\n            //Get the total amount of the order and add them\r\n            const totalCurrency = sameProduct.map(order => (Number(order.quantity) * Number(order.price)));\r\n            const totalCurrencyFromProduct = totalCurrency.reduce((acc, curr) => acc += curr);\r\n            //Get the total cuantity and add them\r\n            const totalQuantity = sameProduct.map(order => Number(order.quantity))\r\n            const totalQuantityFromProduct = totalQuantity.reduce((acc, curr) => acc += curr)\r\n\r\n            return { product: name, currency: Math.ceil(totalCurrencyFromProduct), quantity: totalQuantityFromProduct }\r\n        })\r\n\r\n        return productData\r\n    }\r\n\r\n    getProductData();\r\n\r\n    const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const { value } = e.target;\r\n\r\n        setFilter(value);\r\n    }\r\n\r\n    const renderFilter = () => {\r\n        const filter = [\"Currency\", \"Quantity\"];\r\n\r\n        return (\r\n            <Filter name={\"filter\"} values={filter} changeHadler={handleFilterChange} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ChartContainer>\r\n            <ChartInfo chartTitle=\"Top Three Products\" filters={renderFilter} />\r\n            <div className={styles.chartWrapper}>\r\n                <BarChart data={chartData} filter={filter} />\r\n            </div>\r\n        </ChartContainer>\r\n    );\r\n}\r\n\r\nexport default TopThreeProducts;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopSuppliers\\index.tsx",["78","79"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Context } from '../../Context';\r\nimport { DashboardProps, Order, PieChartData, SupplierData } from '../../types';\r\nimport ChartContainer from '../ChartContainer';\r\nimport ChartInfo from '../ChartInfo';\r\nimport PieChart from '../Charts/PieChart';\r\nimport Filter from '../Filter';\r\nimport styles from './TopSuppliers.module.scss';\r\n\r\nconst TopSuppliers: React.FC<DashboardProps> = ({ orders }) => {\r\n\r\n    const { getUniqueValues, getTotalFromOrder } = useContext(Context);\r\n\r\n    const [filter, setFilter] = useState<string>(\"Currency\");\r\n    const [chartData, setChartData] = useState<PieChartData[]>([]);\r\n\r\n    useEffect(() => {\r\n        const chartData = getChartData();\r\n        setChartData(chartData);\r\n    }, [filter]);\r\n\r\n    const getChartData = () => {\r\n        const suppliersData = getSupplierData();\r\n\r\n        if (filter === \"Currency\") {\r\n            const sortedSuppliersData = suppliersData.sort((supplierA, supplierB) => supplierB.currency - supplierA.currency)\r\n            const topThreeSuppliers = sortedSuppliersData.splice(0, 3);\r\n            const chartData: PieChartData[] = topThreeSuppliers.map(supplier => ({ id: supplier.supplier, value: supplier.currency }));\r\n\r\n            return chartData;\r\n        } else {\r\n            const sortedSuppliersData = suppliersData.sort((supplierA, supplierB) => supplierB.quantity - supplierA.quantity)\r\n            const topThreeSuppliers = sortedSuppliersData.splice(0, 3);\r\n            const chartData: PieChartData[] = topThreeSuppliers.map(supplier => ({ id: supplier.supplier, value: supplier.quantity }));\r\n\r\n            return chartData;\r\n        }\r\n    }\r\n\r\n    const getSupplierData = () => {\r\n\r\n        const suppliersName = orders.map(order => order.supplier);\r\n        const uniqueNames = getUniqueValues(suppliersName);\r\n\r\n        const suppliersData: SupplierData[] = uniqueNames.map(name => {\r\n\r\n            //Get orders of the same supplier\r\n            const ordersFromSameSupplier = orders.filter(order => order.supplier === name);\r\n\r\n            //Get the total amount of the order and add them\r\n            const totalCurrency = ordersFromSameSupplier.map(order => getTotalFromOrder(order));\r\n            const totalCurrencyFromSupplier = totalCurrency.reduce((acc, curr) => acc += curr);\r\n            //Get the total cuantity and add them\r\n            const totalQuantity = ordersFromSameSupplier.map(order => Number(order.quantity));\r\n            const totalQuantityFromSupplier = totalQuantity.reduce((acc, curr) => acc += curr);\r\n\r\n            return { supplier: name, currency: Math.ceil(totalCurrencyFromSupplier), quantity: totalQuantityFromSupplier }\r\n        })\r\n\r\n        return suppliersData;\r\n    }\r\n\r\n    const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const { value } = e.target;\r\n\r\n        setFilter(value);\r\n    }\r\n\r\n    const renderFilters = () => {\r\n        const filters = [\"Currency\", \"Quantity\"];\r\n\r\n        return (\r\n            <Filter name={\"filter\"} values={filters} changeHadler={handleFilterChange} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ChartContainer>\r\n            <ChartInfo chartTitle=\"Top Suppliers\" filters={renderFilters} />\r\n            <div className={styles.chartWrapper}>\r\n                <PieChart data={chartData} filter={filter} />\r\n            </div>\r\n        </ChartContainer>\r\n    );\r\n}\r\n\r\nexport default TopSuppliers;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\IncomingDeliveries\\index.tsx",["80","81","82","83","84","85"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\constants\\index.ts",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartContainer\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Filter\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartInfo\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\BarChart.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\Context\\index.tsx",["86","87","88"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\PieChart.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\LineChart.tsx",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":29,"nodeType":"96","messageId":"97","endLine":1,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":31,"column":8,"nodeType":"100","endLine":31,"endColumn":17,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":36,"column":15,"nodeType":"96","messageId":"97","endLine":36,"endColumn":25},{"ruleId":"94","severity":1,"message":"103","line":38,"column":15,"nodeType":"96","messageId":"97","endLine":38,"endColumn":26},{"ruleId":"94","severity":1,"message":"104","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":15},{"ruleId":"98","severity":1,"message":"105","line":21,"column":8,"nodeType":"100","endLine":21,"endColumn":16,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"104","line":3,"column":26,"nodeType":"96","messageId":"97","endLine":3,"endColumn":31},{"ruleId":"98","severity":1,"message":"107","line":20,"column":8,"nodeType":"100","endLine":20,"endColumn":16,"suggestions":"108"},{"ruleId":"94","severity":1,"message":"109","line":13,"column":61,"nodeType":"96","messageId":"97","endLine":13,"endColumn":81},{"ruleId":"98","severity":1,"message":"110","line":21,"column":8,"nodeType":"100","endLine":21,"endColumn":10,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"112","line":49,"column":19,"nodeType":"96","messageId":"97","endLine":49,"endColumn":29},{"ruleId":"94","severity":1,"message":"113","line":50,"column":19,"nodeType":"96","messageId":"97","endLine":50,"endColumn":28},{"ruleId":"94","severity":1,"message":"114","line":51,"column":19,"nodeType":"96","messageId":"97","endLine":51,"endColumn":28},{"ruleId":"94","severity":1,"message":"115","line":52,"column":19,"nodeType":"96","messageId":"97","endLine":52,"endColumn":30},{"ruleId":"94","severity":1,"message":"116","line":1,"column":42,"nodeType":"96","messageId":"97","endLine":1,"endColumn":51},{"ruleId":"94","severity":1,"message":"117","line":17,"column":20,"nodeType":"96","messageId":"97","endLine":17,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":35,"column":51,"nodeType":"120","messageId":"121","endLine":35,"endColumn":53},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'applyFilters', 'getDailyChartData', 'getMonthlyChartData', 'getOrdersByMonth', and 'orders'. Either include them or remove the dependency array.","ArrayExpression",["124"],"'dayInMonth' is assigned a value but never used.","'ordersInDay' is assigned a value but never used.","'Order' is defined but never used.","React Hook useEffect has missing dependencies: 'getProductData' and 'getTopThreeProducts'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'getChartData'. Either include it or remove the dependency array.",["126"],"'getTotalOrderVolumen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getIncomingDeliveries' and 'orders'. Either include them or remove the dependency array.",["127"],"'productIDs' is assigned a value but never used.","'suppliers' is assigned a value but never used.","'orderDate' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'useEffect' is defined but never used.","'setOrders' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [applyFilters, filters, getDailyChartData, getMonthlyChartData, getOrdersByMonth, orders]",{"range":"136","text":"137"},"Update the dependencies array to be: [filter, getProductData, getTopThreeProducts]",{"range":"138","text":"139"},"Update the dependencies array to be: [filter, getChartData]",{"range":"140","text":"141"},"Update the dependencies array to be: [getIncomingDeliveries, orders]",{"range":"142","text":"143"},[1216,1225],"[applyFilters, filters, getDailyChartData, getMonthlyChartData, getOrdersByMonth, orders]",[821,829],"[filter, getProductData, getTopThreeProducts]",[790,798],"[filter, getChartData]",[841,843],"[getIncomingDeliveries, orders]"]