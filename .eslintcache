[{"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\index.tsx":"1","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\App.tsx":"2","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Navbar\\index.tsx":"3","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Dashboard\\index.tsx":"4","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\index.tsx":"5","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopThreeProducts\\index.tsx":"6","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopSuppliers\\index.tsx":"7","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\IncomingDeliveries\\index.tsx":"8","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\constants\\index.ts":"9","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Filter\\index.tsx":"10","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartInfo\\index.tsx":"11","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\BarChart.tsx":"12","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\Context\\index.tsx":"13","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\PieChart.tsx":"14","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\LineChart.tsx":"15","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\context\\index.tsx":"16"},{"size":251,"mtime":1611562311218,"results":"17","hashOfConfig":"18"},{"size":284,"mtime":1611326961478,"results":"19","hashOfConfig":"18"},{"size":222,"mtime":1611512205417,"results":"20","hashOfConfig":"18"},{"size":1885,"mtime":1611564869843,"results":"21","hashOfConfig":"18"},{"size":6535,"mtime":1611564189587,"results":"22","hashOfConfig":"18"},{"size":2982,"mtime":1611565653081,"results":"23","hashOfConfig":"18"},{"size":3413,"mtime":1611563852924,"results":"24","hashOfConfig":"18"},{"size":3777,"mtime":1611564742773,"results":"25","hashOfConfig":"18"},{"size":2105,"mtime":1611517256364,"results":"26","hashOfConfig":"18"},{"size":871,"mtime":1611520806817,"results":"27","hashOfConfig":"18"},{"size":497,"mtime":1611481553156,"results":"28","hashOfConfig":"18"},{"size":1463,"mtime":1611563121180,"results":"29","hashOfConfig":"18"},{"size":1926,"mtime":1611565016034,"results":"30","hashOfConfig":"18"},{"size":1712,"mtime":1611562083769,"results":"31","hashOfConfig":"18"},{"size":2560,"mtime":1611564307361,"results":"32","hashOfConfig":"18"},{"size":1926,"mtime":1611565016034,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xx81g",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\App.tsx",[],["68","69"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Navbar\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Dashboard\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\index.tsx",["70"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopThreeProducts\\index.tsx",["71"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopSuppliers\\index.tsx",["72"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\IncomingDeliveries\\index.tsx",["73"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\constants\\index.ts",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Filter\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartInfo\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\BarChart.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\Context\\index.tsx",["74","75","76"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { Order } from '../types';\r\nimport JSONData from '../data/orders.json';\r\n\r\ninterface ContextProps {\r\n    orders: Order[]\r\n    getUniqueValues: (array: string[]) => string[],\r\n    formatDate: (stringDate: string) => Date\r\n    getTotalFromOrder: (order: Order) => number,\r\n    getTotalOrderVolumen: (orders: Order[]) => number\r\n}\r\n\r\nconst Context = createContext<ContextProps>({} as ContextProps);\r\n\r\nconst ContextProvider: React.FC = ({ children }) => {\r\n\r\n    const [orders, setOrders] = useState<Order[]>(JSONData);\r\n\r\n    const getUniqueValues = (array: string[]) => {\r\n        const uniqueValues = new Set(array);\r\n\r\n        return Array.from(uniqueValues);\r\n    }\r\n\r\n    const formatDate = (stringDate: string) => {\r\n        const wrongFormatDate = new Date(stringDate);\r\n        const month = wrongFormatDate.getDate();\r\n        const day = wrongFormatDate.getMonth() + 1;\r\n        const year = wrongFormatDate.getFullYear();\r\n\r\n        return new Date(year, month, day)\r\n    }\r\n\r\n    const getTotalOrderVolumen = (orders: Order[]) => {\r\n        if (orders === undefined || orders.length == 0) {\r\n            return 0;\r\n        } else {\r\n            const orderVolumen = orders.map(order => getTotalFromOrder(order));\r\n            const monthlyOrderVolumen = orderVolumen.reduce((acc, curr) => acc += curr);\r\n\r\n            return monthlyOrderVolumen;\r\n        }\r\n    }\r\n\r\n    const getTotalFromOrder = (order: Order) => {\r\n        return Math.ceil(Number(order.price) * Number(order.quantity))\r\n    }\r\n\r\n    return (\r\n        <Context.Provider\r\n            value={{\r\n                orders,\r\n                getUniqueValues,\r\n                formatDate,\r\n                getTotalFromOrder,\r\n                getTotalOrderVolumen\r\n            }}\r\n        >\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport { ContextProvider, Context }","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\PieChart.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Charts\\LineChart.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\context\\index.tsx",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":35,"column":8,"nodeType":"84","endLine":35,"endColumn":17,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":20,"column":8,"nodeType":"84","endLine":20,"endColumn":16,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":19,"column":8,"nodeType":"84","endLine":19,"endColumn":16,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":23,"column":8,"nodeType":"84","endLine":23,"endColumn":10,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":42,"nodeType":"94","messageId":"95","endLine":1,"endColumn":51},{"ruleId":"92","severity":1,"message":"96","line":17,"column":20,"nodeType":"94","messageId":"95","endLine":17,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":35,"column":51,"nodeType":"99","messageId":"100","endLine":35,"endColumn":53},{"ruleId":"92","severity":1,"message":"96","line":17,"column":20,"nodeType":"94","messageId":"95","endLine":17,"endColumn":29},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'applyFilters', 'getDailyChartData', 'getMonthlyChartData', 'getOrdersByMonth', and 'orders'. Either include them or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has missing dependencies: 'getProductData' and 'getTopThreeProducts'. Either include them or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'getChartData'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has missing dependencies: 'getIncomingDeliveries' and 'orders'. Either include them or remove the dependency array.",["106"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setOrders' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [applyFilters, filters, getDailyChartData, getMonthlyChartData, getOrdersByMonth, orders]",{"range":"115","text":"116"},"Update the dependencies array to be: [filter, getProductData, getTopThreeProducts]",{"range":"117","text":"118"},"Update the dependencies array to be: [filter, getChartData]",{"range":"119","text":"120"},"Update the dependencies array to be: [getIncomingDeliveries, orders]",{"range":"121","text":"122"},[1360,1369],"[applyFilters, filters, getDailyChartData, getMonthlyChartData, getOrdersByMonth, orders]",[767,775],"[filter, getProductData, getTopThreeProducts]",[734,742],"[filter, getChartData]",[800,802],"[getIncomingDeliveries, orders]"]