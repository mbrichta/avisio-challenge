[{"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\index.tsx":"1","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\App.tsx":"2","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Navbar\\index.tsx":"3","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Dashboard\\index.tsx":"4","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\index.tsx":"5","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopThreeProducts\\index.tsx":"6","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopSuppliers\\index.tsx":"7","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\IncomingDeliveries\\index.tsx":"8","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\constants\\index.ts":"9","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\LineChart.tsx":"10","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartContainer\\index.tsx":"11","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Filter\\index.tsx":"12","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartInfo\\index.tsx":"13"},{"size":160,"mtime":1611317486197,"results":"14","hashOfConfig":"15"},{"size":284,"mtime":1611317486076,"results":"16","hashOfConfig":"15"},{"size":209,"mtime":1611050080250,"results":"17","hashOfConfig":"15"},{"size":3035,"mtime":1611317486114,"results":"18","hashOfConfig":"15"},{"size":4368,"mtime":1611317486190,"results":"19","hashOfConfig":"15"},{"size":971,"mtime":1611317486167,"results":"20","hashOfConfig":"15"},{"size":946,"mtime":1611317486154,"results":"21","hashOfConfig":"15"},{"size":467,"mtime":1611317486138,"results":"22","hashOfConfig":"15"},{"size":107,"mtime":1611317394838,"results":"23","hashOfConfig":"15"},{"size":1250,"mtime":1611317486173,"results":"24","hashOfConfig":"15"},{"size":279,"mtime":1611317486089,"results":"25","hashOfConfig":"15"},{"size":789,"mtime":1611317486126,"results":"26","hashOfConfig":"15"},{"size":497,"mtime":1611317486101,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11xx81g",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\App.tsx",[],["60","61"],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Navbar\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Dashboard\\index.tsx",["62","63"],"import React from 'react';\r\nimport IncomingDeliveries from '../IncomingDeliveries';\r\nimport TopSuppliers from '../TopSuppliers';\r\nimport TopThreeProducts from '../TopThreeProducts';\r\nimport TotalOrderVolumen from '../TotalOrderVolumen';\r\nimport JSONData from '../../data/orders.json';\r\nimport './Dashboard.scss';\r\n\r\nconst Dashboard: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TotalOrderVolumen />\r\n            <TopThreeProducts />\r\n            <IncomingDeliveries />\r\n            <TopSuppliers />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\index.tsx",["64","65","66","67","68","69"],"import React, { useState } from 'react';\r\nimport { MONTHS } from '../../constants';\r\nimport { Order, LineChartData } from '../../types';\r\nimport ChartContainer from '../ChartContainer';\r\nimport ChartInfo from '../ChartInfo';\r\nimport Filter from '../Filter';\r\nimport LineChart from '../Charts/LineChart';\r\nimport styles from './TotalOrderVolumen.module.scss';\r\n\r\ninterface Props {\r\n    orders: Order[]\r\n}\r\n\r\nconst TotalOrderVolumen: React.FC<Props> = ({ orders }) => {\r\n\r\n    const [supplierFilter, setSupplierFilter] = useState<string>(\"all\");\r\n    const [categoryOneFilter, setCategoryOneFilter] = useState<string>(\"all\");\r\n    const [categoryTwoFilter, setCategoryTwoFilter] = useState<string>(\"all\");\r\n\r\n    const getMonthStringFromDate = (stringDate: string) => {\r\n        const date = new Date(stringDate);\r\n        const month = date.getDate();\r\n\r\n        return MONTHS[month - 1];\r\n    }\r\n\r\n    const getNumberInAMonth = (month: number, year: number) => {\r\n\r\n        const date = new Date(year, month, 0)\r\n        const numberOfDays = date.getDate();\r\n\r\n    }\r\n\r\n    getNumberInAMonth(7, 2020);\r\n\r\n    const getOrderDay = (stringDate: string) => {\r\n        const date = new Date(stringDate);\r\n        const day = date.getMonth() + 1;\r\n\r\n        return day;\r\n    }\r\n\r\n    const getUniqueValues = (array: string[]) => {\r\n        const uniqueValues = new Set(array);\r\n\r\n        return Array.from(uniqueValues);\r\n    }\r\n\r\n    const getOrderVolumen = () => {\r\n\r\n        const data = MONTHS.map((month, indx) => {\r\n            const amountOrdered: LineChartData = {\r\n                id: month,\r\n                data: []\r\n            };\r\n\r\n            orders.map(order => {\r\n                const orderedMonth = getMonthStringFromDate(order.orderedOn);\r\n                const orderedDay = getOrderDay(order.orderedOn);\r\n\r\n                if (month === orderedMonth) {\r\n                    const amount = Number(order.price) * Number(order.quantity);\r\n                    const day = getOrderDay(order.orderedOn)\r\n                    amountOrdered.data.push({ x: day, y: amount })\r\n                }\r\n            })\r\n\r\n            return amountOrdered;\r\n        })\r\n\r\n        return data.slice(0, 1);\r\n    }\r\n\r\n    //console.log(getOrderVolumen());\r\n\r\n    const handleFilterChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const { value, name } = e.target;\r\n\r\n        switch (name) {\r\n            case \"suppliers\":\r\n                setSupplierFilter(value);\r\n                break;\r\n            case \"categoryOne\":\r\n                setCategoryOneFilter(value);\r\n                break;\r\n            case \"categoryTwo\":\r\n                setCategoryTwoFilter(value)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const renderFilters = () => {\r\n        //get array of all values\r\n        const suppliers = orders.map(order => order.supplier)\r\n        const categoryOne = orders.map(order => order.productCategory1);\r\n        const categoryTwo = orders.map(order => order.productCategory2);\r\n        //get only unique values\r\n        const uniqueSuppliers = getUniqueValues(suppliers);\r\n        const uniqueCategorieOne = getUniqueValues(categoryOne);\r\n        const uniqueCategorieTwo = getUniqueValues(categoryTwo);\r\n\r\n        return (\r\n            <>\r\n                <Filter\r\n                    name={\"suppliers\"}\r\n                    values={uniqueSuppliers}\r\n                    changeHadler={handleFilterChange}\r\n                    allOption={true}\r\n                />\r\n                <Filter\r\n                    name={\"categoryOne\"}\r\n                    values={uniqueCategorieOne}\r\n                    changeHadler={handleFilterChange}\r\n                    allOption={true}\r\n                />\r\n                <Filter\r\n                    name={\"categoryTwo\"}\r\n                    values={uniqueCategorieTwo}\r\n                    changeHadler={handleFilterChange}\r\n                    allOption={true}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ChartContainer>\r\n            <ChartInfo chartTitle=\"Order Volumen\" filters={renderFilters} />\r\n            <div className={styles.chartWrapper}>\r\n                <LineChart data={getOrderVolumen()} />\r\n            </div>\r\n        </ChartContainer>\r\n    );\r\n}\r\n\r\nexport default TotalOrderVolumen;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopThreeProducts\\index.tsx",["70"],"import React from 'react';\r\nimport styles from './TopThreeProducts.module.scss';\r\n\r\nconst TopThreeProducts: React.FC = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            Hello from TopThreeProducts\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopThreeProducts;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TopSuppliers\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\IncomingDeliveries\\index.tsx",["71"],"import React from 'react';\r\nimport ChartContainer from '../ChartContainer';\r\nimport ChartInfo from '../ChartInfo';\r\nimport styles from './IncomingDeliveries.module.scss';\r\n\r\nconst IncomingDeliveries: React.FC = () => {\r\n    return (\r\n        <ChartContainer>\r\n            <ChartInfo chartTitle=\"Incoming Deliveries\" />\r\n        </ChartContainer>\r\n    );\r\n}\r\n\r\nexport default IncomingDeliveries;\r\n","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\constants\\index.ts",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\TotalOrderVolumen\\LineChart.tsx",["72"],"import React, { useState } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { LineChartData } from '../../types/index';\r\n\r\ninterface Props {\r\n    data: LineChartData[]\r\n}\r\n\r\nconst LineChart: React.FC<Props> = ({ data }) => {\r\n\r\n    return (\r\n        <ResponsiveLine\r\n            data={data}\r\n            margin={{ top: 50, right: 10, bottom: 50, left: 10 }}\r\n            xScale={{ type: 'linear' }}\r\n            yScale={{ type: 'linear' }}\r\n            curve=\"linear\"\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legendOffset: 36,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                format: '.2s',\r\n                legendOffset: -40,\r\n                legendPosition: 'middle'\r\n            }}\r\n            enableGridX={true}\r\n            enableGridY={true}\r\n            colors={{ scheme: 'spectral' }}\r\n            lineWidth={3}\r\n            pointSize={8}\r\n            pointColor={{ from: 'color', modifiers: [] }}\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default LineChart;","C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartContainer\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\Filter\\index.tsx",[],"C:\\Users\\mathi\\Documents\\avisio-challenge\\src\\components\\ChartInfo\\index.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":16},{"ruleId":"77","severity":1,"message":"81","line":19,"column":20,"nodeType":"79","messageId":"80","endLine":19,"endColumn":29},{"ruleId":"77","severity":1,"message":"82","line":16,"column":12,"nodeType":"79","messageId":"80","endLine":16,"endColumn":26},{"ruleId":"77","severity":1,"message":"83","line":17,"column":12,"nodeType":"79","messageId":"80","endLine":17,"endColumn":29},{"ruleId":"77","severity":1,"message":"84","line":18,"column":12,"nodeType":"79","messageId":"80","endLine":18,"endColumn":29},{"ruleId":"77","severity":1,"message":"85","line":30,"column":15,"nodeType":"79","messageId":"80","endLine":30,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":57,"column":30,"nodeType":"88","messageId":"89","endLine":57,"endColumn":32},{"ruleId":"77","severity":1,"message":"90","line":59,"column":23,"nodeType":"79","messageId":"80","endLine":59,"endColumn":33},{"ruleId":"91","severity":1,"message":"92","line":22,"column":8,"nodeType":"93","endLine":22,"endColumn":16,"suggestions":"94"},{"ruleId":"77","severity":1,"message":"95","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"96","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'JSONData' is defined but never used.","Identifier","unusedVar","'setLayout' is assigned a value but never used.","'supplierFilter' is assigned a value but never used.","'categoryOneFilter' is assigned a value but never used.","'categoryTwoFilter' is assigned a value but never used.","'numberOfDays' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'orderedDay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProductData', 'getTopThreeProducts', and 'orders'. Either include them or remove the dependency array.","ArrayExpression",["99"],"'styles' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [filter, getProductData, getTopThreeProducts, orders]",{"range":"102","text":"103"},[754,762],"[filter, getProductData, getTopThreeProducts, orders]"]